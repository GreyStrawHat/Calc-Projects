stages:
  - lint
  - build
  - test

.container:
  image: registry.cybbh.space/17d/bolc/docker/build:latest
  stage: build
  interruptible: true
  allow_failure: true
  tags:
    - docker
  timeout: 10m

.tester: &test
  extends:
    - .container
  stage: test
  before_script:
    - export PROJ=$CUR_PROJ
  script:
    - echo "Start clang-tidy Check"
    - echo "No output here is good"
    - echo "Ignore \"database\" erorrs for now"
    - find ${PROJ}/ -iname "*.c" -o -iname "*.h" | xargs -I {} clang-tidy {} "-checks=-*,clang-analyzer-*,-clang-analyzer-cplusplus*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling*" -- -I${PROJ}/hdrs 2>&1 | tee clanglog.txt
    - export warnings=$(grep -c warning clanglog.txt)
    - export suppressed=$(grep -c NOLINT clanglog.txt)
    - echo "End clang-tidy Check"
    - cd $PROJ
    - ./build.sh 
    - if [[ 0 -ne $(( ${warnings} - ${suppressed} )) ]]; then echo "Clang-Tidy found ${warnings} warnings." && exit 1; fi
    - export PROJ=$(echo $CUR_PROJ | cut -c 3-)
    - cd ..
    - python3 Tests/${PROJ}Tests.py

# Sections for SimpleCalc
SimpleCalc:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /SimpleCalc/i'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  variables:
    CUR_PROJ: 1_SimpleCalc
  <<: *test
# End Sections for SimpleCalc


# Sections for FileCalc
FileCalc:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /FileCalc/i'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  variables:
    CUR_PROJ: 2_FileCalc
  <<: *test
# End Sections for FileCalc


# Sections for DataStructures1
DataStructures1:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /DataStructures1/i'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  variables:
    CUR_PROJ: 3_DataStructures1
  <<: *test
# End Sections for DataStructures1


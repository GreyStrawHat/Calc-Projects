stages:
  - lint
  - build
  - test
  - export

.container:
  image: registry.levelup.cce.af.mil/cdso/containers/base-registry/ubuntu:20.04
  stage: build
  interruptible: true
  allow_failure: false
  timeout: 10m

.linter: &lint
  extends:
    - .container
  stage: lint
  script:
    - apt update
    - apt-get install -y clang-format
    - 'find ./$CUR_PROJ -type f -name "*.c" | xargs clang-format --dry-run -Werror --style=file'
    - 'find ./$CUR_PROJ -type f -name "*.h" | xargs clang-format --dry-run -Werror --style=file'
  
.builder: &build
  extends:
    - .container
  stage: build
  before_script:
    - apt-get update
    - apt-get install -y cmake
  script:
    - bash build.sh

.tester: &test
  extends:
    - .container
  stage: test
  before_script:
    - apt-get update
    - apt-get install -y cmake python3
  script:
    - mkdir -p build
    - cd build
    - cmake -DDEBUG=1 ..
    - make -j$(nproc)
    - make test "ARGS= -R $CUR_TEST -V" 

JQRCalc-Build:
  needs: []
  <<: *build

Common-Lint:
  variables:
    CUR_PROJ: 0_Common
  <<: *lint

SimpleCalc-Lint:
  variables:
    CUR_PROJ: 1_SimpleCalc
    CUR_TEST: TestSimpleCalc
  <<: *lint

FileCalc-Lint:
  variables:
    CUR_PROJ: 2_FileCalc
    CUR_TEST: TestFileCalc
  <<: *lint

DataStructures1-Lint:
  variables:
    CUR_PROJ: 3_DataStructures1
    CUR_TEST: TestDataStructures1
  <<: *lint

ThreadCalc-Lint:
  variables:
    CUR_PROJ: 4_ThreadCalc
    CUR_TEST: TestThreadCalc
  <<: *lint

NetCalc-Lint:
  variables:
    CUR_PROJ: 5_NetCalc
    CUR_TEST: TestNetCalc
  <<: *lint

SimpleCalc-Test:
  needs: [ "JQRCalc-Build" ]
  variables:
    CUR_PROJ: 1_SimpleCalc
    CUR_TEST: TestSimpleCalc
  <<: *test

FileCalc-Test:
  needs: [ "JQRCalc-Build" ]
  variables:
    CUR_PROJ: 2_FileCalc
    CUR_TEST: TestFileCalc
  <<: *test

DataStructures1-Test:
  needs: [ "JQRCalc-Build" ]
  variables:
    CUR_PROJ: 3_DataStructures1
    CUR_TEST: TestDataStructures1
  <<: *test

ThreadCalc-Test:
  needs: [ "JQRCalc-Build" ]
  variables:
    CUR_PROJ: 4_ThreadCalc
    CUR_TEST: TestThreadCalc
  <<: *test

NetCalc-Test:
  needs: [ "JQRCalc-Build" ]
  variables:
    CUR_PROJ: 5_NetCalc
    CUR_TEST: TestNetCalc
  <<: *test